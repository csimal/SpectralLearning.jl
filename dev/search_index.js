var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpectralLearning","category":"page"},{"location":"#SpectralLearning","page":"Home","title":"SpectralLearning","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpectralLearning.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpectralLearning]","category":"page"},{"location":"#SpectralLearning.AbstractOperator","page":"Home","title":"SpectralLearning.AbstractOperator","text":"AbstractOperator\n\nAn abstract type for linear operators on Banach spaces.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.FourierKernel","page":"Home","title":"SpectralLearning.FourierKernel","text":"FourierKernel{T<:Real}\n\nAn object representing a Fourier kernel function k(xy) = sin (ω  π xy + θ)\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.InnerProduct","page":"Home","title":"SpectralLearning.InnerProduct","text":"InnerProduct{F,S}\n\nAn struct representing a linear form on a Hilbert space as an inner product w x.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.KernelOperator","page":"Home","title":"SpectralLearning.KernelOperator","text":"KernelOperator{K,S} <: AbstractOperator\n\nA type for representing kernel integral operators over Hilbert spaces.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.PolynomialKernel","page":"Home","title":"SpectralLearning.PolynomialKernel","text":"PolynomialKernel{M<:AbstractMatrix}\n\nA type representing a polynomial kernel function.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.Spectral","page":"Home","title":"SpectralLearning.Spectral","text":"Spectral{F,M,V1,V2,V3}\n\nCreate a spectral layer, whose forward pass is given by\n\nσ.(B*(λ_in.*x) .- λ_out.*(B*x) .+ b)\n\nwhere B is a static matrix, and λ_in, λ_out and b are trainable vectors of parameters.\n\nThese layers can be used as drop-in replacement to traditional dense layers, and are usually as good as dense layers for similar amounts of parameters (but spectral layers are wider for the same number of parameters).\n\nExamples\n\njulia> sp = Spectral(5, 2)\nSpectral(5 => 2)\n\n\n\n\n\n","category":"type"},{"location":"#SpectralLearning.spectralize-Tuple{Flux.Dense}","page":"Home","title":"SpectralLearning.spectralize","text":"spectralize(d::Dense)\n\nCreate a spectral layer with the same dimensions as d.\n\n\n\n\n\n","category":"method"}]
}
